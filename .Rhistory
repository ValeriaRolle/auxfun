aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux
is.na(mtcars$mpg)
any(is.na(mtcars$mpg))
mtcars$mpg[4] <- NA
any(is.na(mtcars$mpg))
columna
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD")
aux1
sd(mtcars$mpg)
mtcars$mpg
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux
columna
mtcars
columna <- mtcars$mgp
columna
mtcars
columna <- mtcars$mpg
columna
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux
rownames(aux)[length(aux)] <- "SD"
aux
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
rownames(aux)[length(rownames(aux))] <- "SD"
aux
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
rownames(aux)[8] <- "SD"
aux
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[8,],aux[7,])
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[8,],aux[7,])
aux1
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD", "NA")
aux1
kable(aux1, col.names = var_name, format = formato)
require(knitr)
kable(aux1, col.names = var_name, format = formato)
decimals = 3
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
rownames(aux)[8] <- "SD"
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[8,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD", "NA")
kable(aux1, col.names = var_name, format = formato)
aux$aux <- round(as.numeric(summary(columna)),decimals)
rm(aux)
rm(aux1)
columna <- mtcars$mpg
columna[7] <- NA
any(!is.na(columna))
any(is.na(columna))
!is.na(columna)
!any(!is.na(columna))
ssummary <- function(columna, var_name = "Variable", decimals = 3, formato = "markdown"){
require(knitr)
if(any(is.na(columna))){
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
rownames(aux)[8] <- "SD"
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[8,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD", "NA")
kable(aux1, col.names = var_name, format = formato)
}else if(!any(!is.na(columna))){
aux <- round(summary(columna),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD")
kable(aux1, col.names = var_name, format = formato)
}
}
ssummary(columna)
ssummary(mtcars$mpg)
columna <- mtcars$mpg
columna
aux <- round(summary(columna),3)
aux
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
decimals <- 3
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD")
kable(aux1, col.names = var_name, format = formato)
aux1
library(auxfun)
library(auxfun)
ssummary <- function(columna, var_name = "Variable", decimals = 3, formato = "markdown"){
require(knitr)
if(any(is.na(columna))){
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
rownames(aux)[8] <- "SD"
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[8,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD", "NA")
kable(aux1, col.names = var_name, format = formato)
}else if(!any(!is.na(columna))){
aux <- round(summary(columna),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD")
kable(aux1, col.names = var_name, format = formato)
}
}
ssummary(mtcars$mpg)
aux <- round(summary(columna),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD")
kable(aux1, col.names = var_name, format = formato)
formato = "markdown"
kable(aux1, col.names = var_name, format = formato)
var_name = "Variable"
kable(aux1, col.names = var_name, format = formato)
!any(!is.na(columna))
any(is.na(columna)
)
any(!is.na(columna)
)
columna
any(!is.na(columna))
any(is.na(columna))
ssummary <- function(columna, var_name = "Variable", decimals = 3, formato = "markdown"){
require(knitr)
if(any(is.na(columna)) == FALSE){
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
rownames(aux)[8] <- "SD"
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[8,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD", "NA")
kable(aux1, col.names = var_name, format = formato)
}else if(any(!is.na(columna))){
aux <- round(summary(columna),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD")
kable(aux1, col.names = var_name, format = formato)
}
}
ssummary(columna)
any(is.na(columna)) == FALSE
any(!is.na(columna))
any(is.na(columna))
any(!is.na(columna))
ssummary(columna)
any(is.na(columna))
aux <- round(summary(columna),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD")
aux1
any(is.na(columna))
any(!is.na(columna))
ssummary <- function(columna, var_name = "Variable", decimals = 3, formato = "markdown"){
require(knitr)
if(any(is.na(columna)) == TRUE){
aux <- round(summary(columna, useNA = "always"),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna, na.rm = TRUE)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
rownames(aux)[8] <- "SD"
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[8,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD", "NA")
kable(aux1, col.names = var_name, format = formato)
}else if(any(!is.na(columna)) == TRUE){
aux <- round(summary(columna),3)
aux <- as.factor(aux)
aux <- as.data.frame(aux, names(aux))
aux$aux <- round(as.numeric(summary(columna)),decimals)
sd <- sd(columna)
sd <- data.frame(aux = sd)
aux <- rbind(aux, sd)
aux1 <- rbind(aux[1,],aux[2,],aux[3,],aux[5,],aux[6,],aux[4,],aux[7,])
rownames(aux1) <- c("Min.", "1st Qu.", "Median", "3rd Qu.", "Max.", "Mean", "SD")
kable(aux1, col.names = var_name, format = formato)
}
}
ssummary(columna)
columna[7] <- NA
ssummary(columna)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
ssummary
11*7/3
5/8
13*6/2
setwd("~/Plataforma PBE Dropbox/Patricio Suarez/CURSO MET AVANZ-UNED/ExamenFinal")
datos <- data.frame(a1 = c(1,1,1,1,0,0,0,0),
a2 = c(0,0,0,0,1,1,1,1),
b1 = c(1,1,0,0,1,0,0,1),
b2 = c(0,0,1,1,0,1,1,0),
c1 = c(1,0,1,0,1,1,0,0),
c2 = c(0,1,0,1,0,0,1,1),
frec = c(2,11,3,1,2,5,1,4))
datos
model_1 <- glm(frec ~ a2 + b2 + c2, family = poisson(link = log), data = datos)
summary(model_1)
1-pchisq(12.807, 7)
model_2 <- glm(frec ~ a2 + c2 + a2*b2, family = poisson(link = log), data = datos)
model_2 <- glm(frec ~ a2 + c2 + a2*b2, family = poisson(link = log), data = datos)
model_2 <- glm(frec ~ a2 + c2 + a2*b2, family = poisson(link = log), data = datos)
model_2 <- glm(frec ~ a2 + c2 + a2*b2, family = poisson(link = log), data = datos)
summary(model_2)
1-pchisq(10.63,7)
model_3 <- glm(frec ~ a2 + b2 + c2 + b2*c2, family = poisson(link = log), data = datos)
summary(model_3)
1-pchisq(3.0359, 7)
model_4 <- glm(frec ~ a2 + b2 + c2 + a2*c2, family = poisson(link = log), data = datos)
summary(model_4)
1-pchisq(10.369, 7)
model_5 <- glm(frec ~ a2 + b2 + c2 + a2*b2 + a2*c2, family = poisson(link = log), data = datos)
summary(model_5)
1-pchisq(8.1918, 7)
model_6 <- glm(frec ~ a2 + b2 + c2 + b2*c2 + a2*c2, family = poisson(link = log), data = datos)
summary(model_6)
1-pchisq(0.59752, 7)
model_7 <- glm(frec ~ a2 + b2 + c2 + a2*b2 + a2*c2 + b2*c2, family = poisson(link = log), data = datos)
summary(model_7)
1-pchisq(0.06461, 7)
model_8 <- glm(frec ~ a2 + b2 + c2 + a2*b2 + a2*c2 + b2*c2 + a2*b2*c2, family = poisson(link = log), data = datos)
summary(model_8)
datos <- data.frame(a1 = c(1,1,1,1,0,0,0,0),
a2 = c(0,0,0,0,1,1,1,1),
b1 = c(1,1,0,0,1,0,0,1),
b2 = c(0,0,1,1,0,1,1,0),
c1 = c(1,0,1,0,1,1,0,0),
c2 = c(0,1,0,1,0,0,1,1),
frec = c(2,11,3,1,2,5,1,4))
datos
knitr::opts_chunk$set(echo = TRUE)
datos <- data.frame(a1 = c(1,1,1,1,0,0,0,0),
a2 = c(0,0,0,0,1,1,1,1),
b1 = c(1,1,0,0,1,0,0,1),
b2 = c(0,0,1,1,0,1,1,0),
c1 = c(1,0,1,0,1,1,0,0),
c2 = c(0,1,0,1,0,0,1,1),
frec = c(2,11,3,1,2,5,1,4))
datos
model_1 <- glm(frec ~ a2 + b2 + c2, family = poisson(link = log), data = datos)
summary(model_1)
1-pchisq(12.807, 7)
library(auxfun)
spsstoR <- function(columna, as.Date = TRUE){
columna <- ISOdate(1582,10,14) + columna
columna <- as.Date(columna)
return(columna)
}
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
install.packages("Rtools")
library(auxfun)
1:lenght(colnames(mtcars))
1:length(colnames(mtcars))
vcol <- function(datos, ver = FALSE){
if(ver){
View(as.data.frame(colnames(datos)))
}else if(ver == FALSE){
data.frame(N = c(1:length(colnames(datos))), ColNames = colnames(datos))
}
}
vcol(mtcars)
library(auxfun)
?kable
library(knitr)
?kable
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
ssummary(mtcars$mpg)
library(auxfun)
install.packages("Rtools")
library(auxfun)
library(auxfun)
fptable <- function(columna, var_name = "Variable", caption = "", na = TRUE){
require(knitr)
if(na == TRUE){
# Creo op.table, que contiene un table() de la variable ----
op.table <- as.data.frame(table(columna, useNA = "always"))
# Anado a op.table las proporciones de cada valor, redondeadas a 3. ----
op.table$prop  <- (round(prop.table(table(columna, useNA = "always")),3)*100)
}
if(na == FALSE){
# Creo op.table, que contiene un table() de la variable ----
op.table <- as.data.frame(table(columna))
# Anado a op.table las proporciones de cada valor, redondeadas a 3. ----
op.table$prop  <- (signif(prop.table(table(columna)),2)*100)
}
# Creo una fila nueva en blanco al final de op.table ----
auxdt <- matrix(c(op.table[2,1],1,1),nrow = 1,ncol = 3) # Creo una matriz con tres filas y una sola columna, la primera celda sera el segundo valor de la primera columna, para que no se queje de que no es un factor.
colnames(auxdt) <- colnames(op.table) # le pongo los mismos colnames que op.table para que no proteste
op.table[,1] <- as.character(op.table[,1])
op.table <- rbind(op.table, auxdt) # las junto, ahora ya tengo la fila nueva en "blanco".
# Elementos graficos curiosos ----
colnames(op.table) <- c(var_name, "Frecuencia", "Proporcion") # Pongo los nombres de las columnas bonitos porque saldran en la tabla.
#op.table[,1] <- as.character(op.table[,1]) # Si no, no admite que le ponga "TOTAL"
op.table[nrow(op.table),1] <- "TOTAL" # Le digo que el ultimo valor de esta columna se llame TOTAL
op.table$Frecuencia <- as.numeric(op.table$Frecuencia) # Para que lo alinee al lado que es.
op.table$Frecuencia[nrow(op.table)] <- sum(op.table$Frecuencia[1:(nrow(op.table)-1)]) # Suma de las frecuencias
op.table$Proporcion[nrow(op.table)] <- (signif(sum(round(prop.table(table(columna)),7)),2)*100) # Suma de las proporciones
#op.table$Proporcion <- as.numeric(op.table$Proporcion) # a numerico???
colnames(op.table) <- c(var_name, "Freq.", "%")
kable(op.table, caption = caption)
}
fptable(mtcars$mpg)
columna <- mtcars$mpg
summary(mtcars$mpg)
ssummary(mtcars$mpg)
ssummary(mtcars$cyl)
summary(mtcars$cyl)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
library(auxfun)
fptable <- function(columna, var_name = "Variable", caption = "", na = TRUE){
require(knitr)
if(na == TRUE){
# Creo op.table, que contiene un table() de la variable ----
op.table <- as.data.frame(table(columna, useNA = "always"))
# Anado a op.table las proporciones de cada valor, redondeadas a 3. ----
op.table$prop  <- (round(prop.table(table(columna, useNA = "always")),3)*100)
}
if(na == FALSE){
# Creo op.table, que contiene un table() de la variable ----
op.table <- as.data.frame(table(columna))
# Anado a op.table las proporciones de cada valor, redondeadas a 3. ----
op.table$prop  <- (signif(prop.table(table(columna)),2)*100)
}
# Creo una fila nueva en blanco al final de op.table ----
auxdt <- matrix(c(op.table[2,1],1,1),nrow = 1,ncol = 3) # Creo una matriz con tres filas y una sola columna, la primera celda sera el segundo valor de la primera columna, para que no se queje de que no es un factor.
colnames(auxdt) <- colnames(op.table) # le pongo los mismos colnames que op.table para que no proteste
op.table[,1] <- as.character(op.table[,1])
op.table <- rbind(op.table, auxdt) # las junto, ahora ya tengo la fila nueva en "blanco".
#op.table[,1] <- as.character(op.table[,1]) # Si no, no admite que le ponga "TOTAL"
colnames(optable) <- c("var", "var", "variab")
op.table[nrow(op.table),1] <- "TOTAL" # Le digo que el ultimo valor de esta columna se llame TOTAL
op.table$Frecuencia <- as.numeric(op.table$Frecuencia) # Para que lo alinee al lado que es.
op.table$Frecuencia[nrow(op.table)] <- sum(op.table$Frecuencia[1:(nrow(op.table)-1)]) # Suma de las frecuencias
op.table$Proporcion[nrow(op.table)] <- (signif(sum(round(prop.table(table(columna)),7)),2)*100) # Suma de las proporciones
#op.table$Proporcion <- as.numeric(op.table$Proporcion) # a numerico???
colnames(op.table) <- c(var_name, "Freq.", "%")
kable(op.table, caption = caption)
}
fptable(iris$Species)
fptable <- function(columna, var_name = "Variable", caption = "", na = TRUE){
require(knitr)
if(na == TRUE){
# Creo op.table, que contiene un table() de la variable ----
op.table <- as.data.frame(table(columna, useNA = "always"))
# Anado a op.table las proporciones de cada valor, redondeadas a 3. ----
op.table$prop  <- (round(prop.table(table(columna, useNA = "always")),3)*100)
}
if(na == FALSE){
# Creo op.table, que contiene un table() de la variable ----
op.table <- as.data.frame(table(columna))
# Anado a op.table las proporciones de cada valor, redondeadas a 3. ----
op.table$prop  <- (signif(prop.table(table(columna)),2)*100)
}
# Creo una fila nueva en blanco al final de op.table ----
auxdt <- matrix(c(op.table[2,1],1,1),nrow = 1,ncol = 3) # Creo una matriz con tres filas y una sola columna, la primera celda sera el segundo valor de la primera columna, para que no se queje de que no es un factor.
colnames(auxdt) <- colnames(op.table) # le pongo los mismos colnames que op.table para que no proteste
op.table[,1] <- as.character(op.table[,1])
op.table <- rbind(op.table, auxdt) # las junto, ahora ya tengo la fila nueva en "blanco".
#op.table[,1] <- as.character(op.table[,1]) # Si no, no admite que le ponga "TOTAL"
colnames(op.table) <- c("var", "var", "variab")
op.table[nrow(op.table),1] <- "TOTAL" # Le digo que el ultimo valor de esta columna se llame TOTAL
op.table$Frecuencia <- as.numeric(op.table$Frecuencia) # Para que lo alinee al lado que es.
op.table$Frecuencia[nrow(op.table)] <- sum(op.table$Frecuencia[1:(nrow(op.table)-1)]) # Suma de las frecuencias
op.table$Proporcion[nrow(op.table)] <- (signif(sum(round(prop.table(table(columna)),7)),2)*100) # Suma de las proporciones
#op.table$Proporcion <- as.numeric(op.table$Proporcion) # a numerico???
colnames(op.table) <- c(var_name, "Freq.", "%")
kable(op.table, caption = caption)
}
fptable(iris$Species)
columna <- iris$Species
op.table <- as.data.frame(table(columna, useNA = "always"))
op.table
op.table$prop  <- (round(prop.table(table(columna, useNA = "always")),3)*100)
# Creo una fila nueva en blanco al final de op.table ----
auxdt <- matrix(c(op.table[2,1],1,1),nrow = 1,ncol = 3) # Creo una matriz con tres filas y una sola columna, la primera celda sera el segundo valor de la primera columna, para que no se queje de que no es un factor.
colnames(auxdt) <- colnames(op.table) # le pongo los mismos colnames que op.table para que no proteste
auxdt
op.table[,1] <- as.character(op.table[,1])
op.table <- rbind(op.table, auxdt) # las junto, ahora ya tengo la fila nueva en "blanco".
op.table[nrow(op.table),1] <- "TOTAL" # Le digo que el ultimo valor de esta columna se llame TOTAL
op.table$Frecuencia <- as.numeric(op.table$Frecuencia) # Para que lo alinee al lado que es.
op.table$Frecuencia
op.table
#op.table[,1] <- as.character(op.table[,1]) # Si no, no admite que le ponga "TOTAL"
colnames(op.table) <- c("Variable", "Frecuencia", "Proporcion")
op.table[nrow(op.table),1] <- "TOTAL" # Le digo que el ultimo valor de esta columna se llame TOTAL
op.table$Frecuencia <- as.numeric(op.table$Frecuencia) # Para que lo alinee al lado que es.
op.table$Frecuencia[nrow(op.table)] <- sum(op.table$Frecuencia[1:(nrow(op.table)-1)]) # Suma de las frecuencias
op.table$Proporcion[nrow(op.table)] <- (signif(sum(round(prop.table(table(columna)),7)),2)*100) # Suma de las proporciones
#op.table$Proporcion <- as.numeric(op.table$Proporcion) # a numerico???
colnames(op.table) <- c(var_name, "Freq.", "%")
kable(op.table, caption = caption)
kable(op.table
)
?kable
library(auxfun)
library(auxfun)
?fptable
library(auxfun)
library(rlang)
library(survival)
?survfit
